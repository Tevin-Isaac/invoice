/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OrangeKitSafeFactory,
  OrangeKitSafeFactoryInterface,
} from "../../contracts/OrangeKitSafeFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "InvalidEmergencyGovernanceAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNewOwnerAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNewSingletonAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "InvalidSingletonAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTruncatedBitcoinAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUpgradeInitData",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SingletonAlreadyUpgraded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bitcoinSafeOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes20",
        name: "truncatedBitcoinAddress",
        type: "bytes20",
      },
    ],
    name: "SafeDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSingleton",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newSingleton",
        type: "address",
      },
    ],
    name: "SingletonUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "bitcoinSafeOwnerProxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "truncatedBitcoinAddress",
        type: "bytes20",
      },
    ],
    name: "deploySafe",
    outputs: [
      {
        internalType: "contract SafeProxy",
        name: "safe",
        type: "address",
      },
      {
        internalType: "contract Proxy",
        name: "bitcoinSafeOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_safeSingleton",
        type: "address",
      },
      {
        internalType: "address",
        name: "_safeOwnerSingleton",
        type: "address",
      },
      {
        internalType: "address",
        name: "_emergencyGovernance",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes20",
        name: "truncatedBitcoinAddress",
        type: "bytes20",
      },
    ],
    name: "predictAddresses",
    outputs: [
      {
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        internalType: "address",
        name: "bitcoinSafeOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeOwnerSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeProxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "safeSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSingleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "upgradeSingleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506005805460ff60a01b1916600160a01b1790556116b8806100326000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806380e3671311610081578063ac7d146b1161005b578063ac7d146b1461021d578063c0c53b8b1461023d578063f2fde38b1461025057600080fd5b806380e36713146101ca57806383e13dd7146101ea5780638da5cb5b146101fd57600080fd5b8063782e97e5116100b2578063782e97e51461016d5780637aca2287146101ad5780637cc392b6146101c257600080fd5b8063158ef93e146100d95780632763b6af1461011357806349fc855714610128575b600080fd5b6005546100fe9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61011b610263565b60405161010a919061100c565b6004546101489073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010a565b61018061017b36600461103f565b61028d565b6040805173ffffffffffffffffffffffffffffffffffffffff93841681529290911660208301520161010a565b6101c06101bb3660046110d9565b6103ba565b005b61011b6105ab565b6003546101489073ffffffffffffffffffffffffffffffffffffffff1681565b6101806101f836600461103f565b6105bd565b6005546101489073ffffffffffffffffffffffffffffffffffffffff1681565b6002546101489073ffffffffffffffffffffffffffffffffffffffff1681565b6101c061024b36600461119b565b610626565b6101c061025e3660046111de565b610826565b60606040518060200161027590610fce565b601f1982820381018352601f90910116604052919050565b6000807fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083166102e9576040517f7539e36d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008416602082015260009060340160405160208183030381529060405280519060200120905061033c848261095f565b91506103488282610b3c565b9250836bffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f4b4bb9c4cbb0ece629e80dba105712e878e6b146d57f1653b69e82a671a5739060405160405180910390a450915091565b60055473ffffffffffffffffffffffffffffffffffffffff16331461040b576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82161580610443575073ffffffffffffffffffffffffffffffffffffffff821630145b1561047a576040517fa9a1430700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff8084169116036104ce576040517fbf99bb9100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301527fdee937f46b239ff6c0729b8d04ce5ca5a877c088ad6804e3124725b4d1d7a60e910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161781558151900361059c576040517f6572917000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105a63082610d36565b505050565b60606040518060200161027590610fdb565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000821660208201526000908190819060340160405160208183030381529060405280519060200120905061061381610d4b565b925061061e81610dbe565b915050915091565b60055474010000000000000000000000000000000000000000900460ff161561067b576040517f0dc149f000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790556106c4833b151590565b610717576040517f6a1f3a5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b813b610767576040517f6a1f3a5c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161070e565b803b6107b7576040517f2c5c094100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161070e565b600580547fffffffffffffffffffffffff000000000000000000000000000000000000000090811633179091556002805473ffffffffffffffffffffffffffffffffffffffff958616908316179055600380549385169382169390931790925560048054919093169116179055565b60055473ffffffffffffffffffffffffffffffffffffffff163314610877576040517fea8e4eb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166108c4576040517f8f29a50900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0910160405180910390a1600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806040518060200161097290610fdb565b601f1982820381018352601f9091011660408190526003546109b0929173ffffffffffffffffffffffffffffffffffffffff909116906020016111f9565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff8216610a70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f426974636f696e536166654f776e65722050726f78792043726561746532206360448201527f616c6c206661696c656400000000000000000000000000000000000000000000606482015260840161070e565b6004546040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008616602482015273ffffffffffffffffffffffffffffffffffffffff909116604482015260009060640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa59b25de000000000000000000000000000000000000000000000000000000001781528151919250600091829182919082885af103610b3457600080fd5b505092915050565b60008060405180602001610b4f90610fce565b601f1982820381018352601f909101166040819052600254610b8d929173ffffffffffffffffffffffffffffffffffffffff909116906020016111f9565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff8216610c27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166652050726f787920437265617465322063616c6c206661696c65640000604482015260640161070e565b604080516001808252818301909252600091602080830190803683370190505090508481600081518110610c5d57610c5d61121b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008160016000806000806000604051602401610cba979695949392919061124a565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb63e800d000000000000000000000000000000000000000000000000000000001781528151919250600091829182919082895af103610d2d57600080fd5b50505092915050565b6060610d4483836000610e0f565b9392505050565b60008060405180602001610d5e90610fce565b601f1982820381018352601f909101166040819052600254610d9c929173ffffffffffffffffffffffffffffffffffffffff909116906020016111f9565b6040516020818303038152906040529050610d44838280519060200120610ed2565b60008060405180602001610dd190610fdb565b601f1982820381018352601f909101166040819052600354610d9c929173ffffffffffffffffffffffffffffffffffffffff909116906020016111f9565b606081471015610e4d576040517fcd78605900000000000000000000000000000000000000000000000000000000815230600482015260240161070e565b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610e769190611344565b60006040518083038185875af1925050503d8060008114610eb3576040519150601f19603f3d011682016040523d82523d6000602084013e610eb8565b606091505b5091509150610ec8868383610efd565b9695505050505050565b604080519081018290526020810183905230808252600091600b0160ff815360559020949350505050565b606082610f1257610f0d82610f8c565b610d44565b8151158015610f36575073ffffffffffffffffffffffffffffffffffffffff84163b155b15610f85576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240161070e565b5080610d44565b805115610f9c5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101918061136183390190565b610191806114f283390190565b60005b83811015611003578181015183820152602001610feb565b50506000910152565b602081526000825180602084015261102b816040850160208701610fe8565b601f01601f19169190910160400192915050565b60006020828403121561105157600080fd5b81357fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081168114610d4457600080fd5b803573ffffffffffffffffffffffffffffffffffffffff811681146110a557600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156110ec57600080fd5b6110f583611081565b9150602083013567ffffffffffffffff8082111561111257600080fd5b818501915085601f83011261112657600080fd5b813581811115611138576111386110aa565b604051601f8201601f19908116603f01168101908382118183101715611160576111606110aa565b8160405282815288602084870101111561117957600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000606084860312156111b057600080fd5b6111b984611081565b92506111c760208501611081565b91506111d560408501611081565b90509250925092565b6000602082840312156111f057600080fd5b610d4482611081565b6000835161120b818460208801610fe8565b9190910191825250602001919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6101008082528851908201819052600090610120830190602090818c01845b8281101561129b57815173ffffffffffffffffffffffffffffffffffffffff1685529383019390830190600101611269565b505050508860208401526112c7604084018973ffffffffffffffffffffffffffffffffffffffff169052565b82810360608401526000815273ffffffffffffffffffffffffffffffffffffffff87166080840152602001905073ffffffffffffffffffffffffffffffffffffffff851660a08301528360c083015261133860e083018473ffffffffffffffffffffffffffffffffffffffff169052565b98975050505050505050565b60008251611356818460208701610fe8565b919091019291505056fe6080604052348015600f57600080fd5b50604051610191380380610191833981016040819052602c9160b4565b6001600160a01b03811660905760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560e2565b60006020828403121560c557600080fd5b81516001600160a01b038116811460db57600080fd5b9392505050565b60a1806100f06000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea2646970667358221220f89ca516c377163343639e4278fbb9e3e2d018eddf7c97364e813fbb6dac5a8764736f6c634300081900336080604052348015600f57600080fd5b50604051610191380380610191833981016040819052602c9160b4565b6001600160a01b03811660905760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905560e2565b60006020828403121560c557600080fd5b81516001600160a01b038116811460db57600080fd5b9392505050565b60a1806100f06000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea2646970667358221220f459f654b2dfcb442c5cba1925f8fabafea34ef6bbc3d170d739523834b41f4264736f6c63430008190033a264697066735822122003b5a2effc0b34b5295eba26be52d035b915674e487db2cbb22977c7c8fb885864736f6c63430008190033";

type OrangeKitSafeFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrangeKitSafeFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrangeKitSafeFactory__factory extends ContractFactory {
  constructor(...args: OrangeKitSafeFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OrangeKitSafeFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OrangeKitSafeFactory__factory {
    return super.connect(runner) as OrangeKitSafeFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrangeKitSafeFactoryInterface {
    return new Interface(_abi) as OrangeKitSafeFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OrangeKitSafeFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OrangeKitSafeFactory;
  }
}

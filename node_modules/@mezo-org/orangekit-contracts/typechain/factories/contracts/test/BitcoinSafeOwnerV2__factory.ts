/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BitcoinSafeOwnerV2,
  BitcoinSafeOwnerV2Interface,
} from "../../../contracts/test/BitcoinSafeOwnerV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "EmergencyGovernanceAddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEmergencyGovernanceCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNewSingletonAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureV",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTruncatedBitcoinAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUpgradeInitData",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidUpgradeSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "PubkeyNotOnCurve",
    type: "error",
  },
  {
    inputs: [],
    name: "SingletonAlreadyUpgraded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSingleton",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newSingleton",
        type: "address",
      },
    ],
    name: "SingletonUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_SINGLETON_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dummy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyGovernance",
    outputs: [
      {
        internalType: "contract EmergencyGovernance",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSingleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "emergencyUpgradeSingleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initializedV2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dummy",
        type: "address",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "truncatedBitcoinAddress",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSingleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "upgradeSingleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060038054600160a01b60ff60a01b199182168117909255600480549091169091179055611dc9806100426000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063452158041161008c57806356ecd4ed1161006657806356ecd4ed1461023f5780635a32b3511461025257806366d3820314610279578063f03fa2e01461028c57600080fd5b806345215804146101f557806349fc85571461020a57806354fd4d501461022a57600080fd5b806320c13b0b116100bd57806320c13b0b1461018757806332e43a111461019a5780633644e515146101df57600080fd5b8063158ef93e146100e45780631626ba7e1461011e57806318c20ecb14610162575b600080fd5b6003546101099074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b61013161012c3660046117a7565b6102ca565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610115565b6004546101099074010000000000000000000000000000000000000000900460ff1681565b6101316101953660046117ee565b61032b565b6005546101ba9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610115565b6101e7610393565b604051908152602001610115565b61020861020336600461186a565b610465565b005b6004546101ba9073ffffffffffffffffffffffffffffffffffffffff1681565b6102326106fa565b60405161011591906118f4565b61020861024d366004611907565b610788565b6101e77f802a770f09bdbfa7f9b4559333b5e95f6018fc9d587ac61cfc0dc6692680d5b281565b61020861028736600461197d565b610a19565b6003546102999060601b81565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009091168152602001610115565b60006102d68383610bb9565b610300577fffffffff00000000000000000000000000000000000000000000000000000000610322565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b90505b92915050565b8151602083012060009061033f8184610bb9565b610369577fffffffff0000000000000000000000000000000000000000000000000000000061038b565b7f20c13b0b000000000000000000000000000000000000000000000000000000005b949350505050565b604080518082018252601081527f426974636f696e536166654f776e657200000000000000000000000000000000602090910152516000907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f907f74230b03fa3f67c032df361ff7637db26b0447d3755a6cae7dfc0812abd5c1d89061041b906002906119ed565b60408051918290038220602083019490945281019190915260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b73ffffffffffffffffffffffffffffffffffffffff8216158061049d575073ffffffffffffffffffffffffffffffffffffffff821630145b156104d4576040517fa9a1430700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff808416911603610528576040517fbf99bb9100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048054604080517febe81228000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9092169263ebe812289282820192602092908290030181865afa158015610595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b99190611a81565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061d576040517f96c81faa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291841660208301527fdee937f46b239ff6c0729b8d04ce5ca5a877c088ad6804e3124725b4d1d7a60e910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416178155815190036106eb576040517f6572917000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f53082610f25565b505050565b600280546107079061199a565b80601f01602080910402602001604051908101604052809291908181526020018280546107339061199a565b80156107805780601f1061075557610100808354040283529160200191610780565b820191906000526020600020905b81548152906001019060200180831161076357829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff831615806107c0575073ffffffffffffffffffffffffffffffffffffffff831630145b156107f7576040517fa9a1430700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005473ffffffffffffffffffffffffffffffffffffffff80851691160361084b576040517fbf99bb9100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610855610393565b7f802a770f09bdbfa7f9b4559333b5e95f6018fc9d587ac61cfc0dc6692680d5b2858560405160200161088a93929190611a9e565b604051602081830303815290604052805190602001206040516020016108e29291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506109048183610bb9565b61093a576040517f7be966bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291861660208301527fdee937f46b239ff6c0729b8d04ce5ca5a877c088ad6804e3124725b4d1d7a60e910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861617815583519003610a08576040517f6572917000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a123084610f25565b5050505050565b60045474010000000000000000000000000000000000000000900460ff1615610a6e576040517f7b878c0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610af0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7632207365747570206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b60408051808201909152600681527f76322e302e3000000000000000000000000000000000000000000000000000006020820152600290610b319082611b2c565b506005805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600480547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60035460009060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016610c1a576040517f7539e36d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8151608114610c55576040517f4be6321b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208201516040830151606084015160618501516081860151600092831a949392610c7f86610f33565b9650905060608115610cc3576000610c968b610f60565b9050805181604051602001610cac929190611c28565b604051602081830303815290604052915050610d2e565b6040517f18426974636f696e205369676e6564204d6573736167653a0a0000000000000060208201527f20000000000000000000000000000000000000000000000000000000000000006039820152603a81018b9052605a0160405160208183030381529060405290505b600060028083604051610d419190611c99565b602060405180830381855afa158015610d5e573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610d819190611cb5565b604051602001610d9391815260200190565b60408051601f1981840301815290829052610dad91611c99565b602060405180830381855afa158015610dca573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610ded9190611cb5565b9050610df985856110a0565b610e2f576040517fc5fadbb800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8760ff16601b1480610e4457508760ff16601c145b15610e6657610e57818989898989611124565b98505050505050505050610325565b8760ff16601f1480610e7b57508760ff166020145b15610e9857610e5781610e8f60048b611cfd565b89898989611226565b8760ff1660231480610ead57508760ff166024145b15610eca57610e5781610ec160088b611cfd565b8989898961127f565b8760ff1660271480610edf57508760ff166028145b15610ef357610e5781610e8f600c8b611cfd565b6040517fff551e8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060610322838360006113e2565b60008060808360ff161015610f4a57600083610f57565b6001610f57608085611cfd565b91509150915091565b6040805181815260608181018352918391600091602082018180368337019050509050603f5b801561101d577f303132333435363738396162636465660000000000000000000000000000000083600f1660108110610fc157610fc1611d16565b1a60f81b828281518110610fd757610fd7611d16565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049290921c9161101681611d45565b9050610f86565b507f303132333435363738396162636465660000000000000000000000000000000082600f166010811061105357611053611d16565b1a60f81b8160008151811061106a5761106a611d16565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053509392505050565b6000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f808586098509905060007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8485099050807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f600784081495945050505050565b6040517f040000000000000000000000000000000000000000000000000000000000000060208201526021810183905260418101829052600090600490829061117f906061015b6040516020818303038152906040526114a7565b6040805160208082018990528183018890528251808303840181526060909201909252805191012090915073ffffffffffffffffffffffffffffffffffffffff166111cc8a8a8a8a611554565b73ffffffffffffffffffffffffffffffffffffffff16148015611219575060035460601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116908216145b9998505050505050505050565b600080611237600260018516611d7a565b6040517fff0000000000000000000000000000000000000000000000000000000000000060f883901b1660208201526021810186905290915060009061117f9060410161116b565b600080611290600260018516611d7a565b6040517fff0000000000000000000000000000000000000000000000000000000000000060f883901b166020820152602181018690529091506000906112d89060410161116b565b6040517e1400000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008216602282015290915060009061133a9060360161116b565b6040805160208082018a90528183018990528251808303840181526060909201909252805191012090915073ffffffffffffffffffffffffffffffffffffffff166113878b8b8b8b611554565b73ffffffffffffffffffffffffffffffffffffffff161480156113d4575060035460601b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116908216145b9a9950505050505050505050565b606081471015611420576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610ae7565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516114499190611c99565b60006040518083038185875af1925050503d8060008114611486576040519150601f19603f3d011682016040523d82523d6000602084013e61148b565b606091505b509150915061149b868383611617565b925050505b9392505050565b600060036002836040516114bb9190611c99565b602060405180830381855afa1580156114d8573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906114fb9190611cb5565b60405160200161150d91815260200190565b60408051601f198184030181529082905261152791611c99565b602060405180830381855afa158015611544573d6000803e3d6000fd5b50506040515160601b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156115b0576040517fbf4bf5b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051600081526020810180835287905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611603573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b60608261162c57611627826116a6565b6114a0565b8151158015611650575073ffffffffffffffffffffffffffffffffffffffff84163b155b1561169f576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610ae7565b50806114a0565b8051156116b65780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261172b57600080fd5b813567ffffffffffffffff80821115611746576117466116eb565b604051601f8301601f19908116603f0116810190828211818310171561176e5761176e6116eb565b8160405283815286602085880101111561178757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156117ba57600080fd5b82359150602083013567ffffffffffffffff8111156117d857600080fd5b6117e48582860161171a565b9150509250929050565b6000806040838503121561180157600080fd5b823567ffffffffffffffff8082111561181957600080fd5b6118258683870161171a565b9350602085013591508082111561183b57600080fd5b506117e48582860161171a565b73ffffffffffffffffffffffffffffffffffffffff811681146116e857600080fd5b6000806040838503121561187d57600080fd5b823561188881611848565b9150602083013567ffffffffffffffff8111156117d857600080fd5b60005b838110156118bf5781810151838201526020016118a7565b50506000910152565b600081518084526118e08160208601602086016118a4565b601f01601f19169290920160200192915050565b60208152600061032260208301846118c8565b60008060006060848603121561191c57600080fd5b833561192781611848565b9250602084013567ffffffffffffffff8082111561194457600080fd5b6119508783880161171a565b9350604086013591508082111561196657600080fd5b506119738682870161171a565b9150509250925092565b60006020828403121561198f57600080fd5b81356114a081611848565b600181811c908216806119ae57607f821691505b6020821081036119e7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008083546119fb8161199a565b60018281168015611a135760018114611a4657611a75565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0084168752821515830287019450611a75565b8760005260208060002060005b85811015611a6c5781548a820152908401908201611a53565b50505082870194505b50929695505050505050565b600060208284031215611a9357600080fd5b81516114a081611848565b83815273ffffffffffffffffffffffffffffffffffffffff83166020820152606060408201526000611ad360608301846118c8565b95945050505050565b601f8211156106f5576000816000526020600020601f850160051c81016020861015611b055750805b601f850160051c820191505b81811015611b2457828155600101611b11565b505050505050565b815167ffffffffffffffff811115611b4657611b466116eb565b611b5a81611b54845461199a565b84611adc565b602080601f831160018114611bad5760008415611b775750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611b24565b600085815260208120601f198616915b82811015611bdc57888601518255948401946001909101908401611bbd565b5085821015611c1857878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f18426974636f696e205369676e6564204d6573736167653a0a0000000000000081527fff000000000000000000000000000000000000000000000000000000000000008360f81b16601982015260008251611c8b81601a8501602087016118a4565b91909101601a019392505050565b60008251611cab8184602087016118a4565b9190910192915050565b600060208284031215611cc757600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60ff828116828216039081111561032557610325611cce565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081611d5457611d54611cce565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b60ff818116838216019081111561032557610325611cce56fea2646970667358221220c484a569d59fcab44db04f97292af6a230f62da8e0f6e8595f340e0ba4e28f3864736f6c63430008190033";

type BitcoinSafeOwnerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitcoinSafeOwnerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitcoinSafeOwnerV2__factory extends ContractFactory {
  constructor(...args: BitcoinSafeOwnerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BitcoinSafeOwnerV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BitcoinSafeOwnerV2__factory {
    return super.connect(runner) as BitcoinSafeOwnerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitcoinSafeOwnerV2Interface {
    return new Interface(_abi) as BitcoinSafeOwnerV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BitcoinSafeOwnerV2 {
    return new Contract(address, _abi, runner) as unknown as BitcoinSafeOwnerV2;
  }
}

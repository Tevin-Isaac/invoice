/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface OrangeKitDeployerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "BITCOIN_SAFE_OWNER_SINGLETON"
      | "EIP2470_SINGLETON_FACTORY"
      | "EMERGENCY_GOVERNANCE"
      | "EMERGENCY_UPGRADER"
      | "ORANGE_KIT_SAFE_FACTORY_PROXY"
      | "ORANGE_KIT_SAFE_FACTORY_SINGLETON"
      | "SAFE_SINGLETON"
      | "SALT"
      | "deploy"
      | "deployBitcoinSafeOwnerSingleton"
      | "deployEmergencyGovernance"
      | "deployOrangeKitSafeFactoryProxy"
      | "deployOrangeKitSafeFactorySingleton"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "BitcoinSafeOwnerSingletonDeployed"
      | "EmergencyGovernanceDeployed"
      | "OrangeKitSafeFactoryProxyDeployed"
      | "OrangeKitSafeFactorySingletonDeployed"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "BITCOIN_SAFE_OWNER_SINGLETON",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EIP2470_SINGLETON_FACTORY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EMERGENCY_GOVERNANCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EMERGENCY_UPGRADER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ORANGE_KIT_SAFE_FACTORY_PROXY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ORANGE_KIT_SAFE_FACTORY_SINGLETON",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SAFE_SINGLETON",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "SALT", values?: undefined): string;
  encodeFunctionData(functionFragment: "deploy", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "deployBitcoinSafeOwnerSingleton",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployEmergencyGovernance",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployOrangeKitSafeFactoryProxy",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deployOrangeKitSafeFactorySingleton",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "BITCOIN_SAFE_OWNER_SINGLETON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EIP2470_SINGLETON_FACTORY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EMERGENCY_GOVERNANCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EMERGENCY_UPGRADER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ORANGE_KIT_SAFE_FACTORY_PROXY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ORANGE_KIT_SAFE_FACTORY_SINGLETON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SAFE_SINGLETON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "SALT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deploy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "deployBitcoinSafeOwnerSingleton",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployEmergencyGovernance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployOrangeKitSafeFactoryProxy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deployOrangeKitSafeFactorySingleton",
    data: BytesLike
  ): Result;
}

export namespace BitcoinSafeOwnerSingletonDeployedEvent {
  export type InputTuple = [bitcoinSafeOwnerSingleton: AddressLike];
  export type OutputTuple = [bitcoinSafeOwnerSingleton: string];
  export interface OutputObject {
    bitcoinSafeOwnerSingleton: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EmergencyGovernanceDeployedEvent {
  export type InputTuple = [emergencyGovernance: AddressLike];
  export type OutputTuple = [emergencyGovernance: string];
  export interface OutputObject {
    emergencyGovernance: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OrangeKitSafeFactoryProxyDeployedEvent {
  export type InputTuple = [orangeKitSafeFactoryProxy: AddressLike];
  export type OutputTuple = [orangeKitSafeFactoryProxy: string];
  export interface OutputObject {
    orangeKitSafeFactoryProxy: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OrangeKitSafeFactorySingletonDeployedEvent {
  export type InputTuple = [orangeKitSafeFactorySingleton: AddressLike];
  export type OutputTuple = [orangeKitSafeFactorySingleton: string];
  export interface OutputObject {
    orangeKitSafeFactorySingleton: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface OrangeKitDeployer extends BaseContract {
  connect(runner?: ContractRunner | null): OrangeKitDeployer;
  waitForDeployment(): Promise<this>;

  interface: OrangeKitDeployerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  BITCOIN_SAFE_OWNER_SINGLETON: TypedContractMethod<[], [string], "view">;

  EIP2470_SINGLETON_FACTORY: TypedContractMethod<[], [string], "view">;

  EMERGENCY_GOVERNANCE: TypedContractMethod<[], [string], "view">;

  EMERGENCY_UPGRADER: TypedContractMethod<[], [string], "view">;

  ORANGE_KIT_SAFE_FACTORY_PROXY: TypedContractMethod<[], [string], "view">;

  ORANGE_KIT_SAFE_FACTORY_SINGLETON: TypedContractMethod<[], [string], "view">;

  SAFE_SINGLETON: TypedContractMethod<[], [string], "view">;

  SALT: TypedContractMethod<[], [string], "view">;

  deploy: TypedContractMethod<[], [void], "nonpayable">;

  deployBitcoinSafeOwnerSingleton: TypedContractMethod<
    [],
    [void],
    "nonpayable"
  >;

  deployEmergencyGovernance: TypedContractMethod<[], [void], "nonpayable">;

  deployOrangeKitSafeFactoryProxy: TypedContractMethod<
    [],
    [void],
    "nonpayable"
  >;

  deployOrangeKitSafeFactorySingleton: TypedContractMethod<
    [],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "BITCOIN_SAFE_OWNER_SINGLETON"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EIP2470_SINGLETON_FACTORY"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EMERGENCY_GOVERNANCE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EMERGENCY_UPGRADER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ORANGE_KIT_SAFE_FACTORY_PROXY"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ORANGE_KIT_SAFE_FACTORY_SINGLETON"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SAFE_SINGLETON"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SALT"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "deploy"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "deployBitcoinSafeOwnerSingleton"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "deployEmergencyGovernance"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "deployOrangeKitSafeFactoryProxy"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "deployOrangeKitSafeFactorySingleton"
  ): TypedContractMethod<[], [void], "nonpayable">;

  getEvent(
    key: "BitcoinSafeOwnerSingletonDeployed"
  ): TypedContractEvent<
    BitcoinSafeOwnerSingletonDeployedEvent.InputTuple,
    BitcoinSafeOwnerSingletonDeployedEvent.OutputTuple,
    BitcoinSafeOwnerSingletonDeployedEvent.OutputObject
  >;
  getEvent(
    key: "EmergencyGovernanceDeployed"
  ): TypedContractEvent<
    EmergencyGovernanceDeployedEvent.InputTuple,
    EmergencyGovernanceDeployedEvent.OutputTuple,
    EmergencyGovernanceDeployedEvent.OutputObject
  >;
  getEvent(
    key: "OrangeKitSafeFactoryProxyDeployed"
  ): TypedContractEvent<
    OrangeKitSafeFactoryProxyDeployedEvent.InputTuple,
    OrangeKitSafeFactoryProxyDeployedEvent.OutputTuple,
    OrangeKitSafeFactoryProxyDeployedEvent.OutputObject
  >;
  getEvent(
    key: "OrangeKitSafeFactorySingletonDeployed"
  ): TypedContractEvent<
    OrangeKitSafeFactorySingletonDeployedEvent.InputTuple,
    OrangeKitSafeFactorySingletonDeployedEvent.OutputTuple,
    OrangeKitSafeFactorySingletonDeployedEvent.OutputObject
  >;

  filters: {
    "BitcoinSafeOwnerSingletonDeployed(address)": TypedContractEvent<
      BitcoinSafeOwnerSingletonDeployedEvent.InputTuple,
      BitcoinSafeOwnerSingletonDeployedEvent.OutputTuple,
      BitcoinSafeOwnerSingletonDeployedEvent.OutputObject
    >;
    BitcoinSafeOwnerSingletonDeployed: TypedContractEvent<
      BitcoinSafeOwnerSingletonDeployedEvent.InputTuple,
      BitcoinSafeOwnerSingletonDeployedEvent.OutputTuple,
      BitcoinSafeOwnerSingletonDeployedEvent.OutputObject
    >;

    "EmergencyGovernanceDeployed(address)": TypedContractEvent<
      EmergencyGovernanceDeployedEvent.InputTuple,
      EmergencyGovernanceDeployedEvent.OutputTuple,
      EmergencyGovernanceDeployedEvent.OutputObject
    >;
    EmergencyGovernanceDeployed: TypedContractEvent<
      EmergencyGovernanceDeployedEvent.InputTuple,
      EmergencyGovernanceDeployedEvent.OutputTuple,
      EmergencyGovernanceDeployedEvent.OutputObject
    >;

    "OrangeKitSafeFactoryProxyDeployed(address)": TypedContractEvent<
      OrangeKitSafeFactoryProxyDeployedEvent.InputTuple,
      OrangeKitSafeFactoryProxyDeployedEvent.OutputTuple,
      OrangeKitSafeFactoryProxyDeployedEvent.OutputObject
    >;
    OrangeKitSafeFactoryProxyDeployed: TypedContractEvent<
      OrangeKitSafeFactoryProxyDeployedEvent.InputTuple,
      OrangeKitSafeFactoryProxyDeployedEvent.OutputTuple,
      OrangeKitSafeFactoryProxyDeployedEvent.OutputObject
    >;

    "OrangeKitSafeFactorySingletonDeployed(address)": TypedContractEvent<
      OrangeKitSafeFactorySingletonDeployedEvent.InputTuple,
      OrangeKitSafeFactorySingletonDeployedEvent.OutputTuple,
      OrangeKitSafeFactorySingletonDeployedEvent.OutputObject
    >;
    OrangeKitSafeFactorySingletonDeployed: TypedContractEvent<
      OrangeKitSafeFactorySingletonDeployedEvent.InputTuple,
      OrangeKitSafeFactorySingletonDeployedEvent.OutputTuple,
      OrangeKitSafeFactorySingletonDeployedEvent.OutputObject
    >;
  };
}

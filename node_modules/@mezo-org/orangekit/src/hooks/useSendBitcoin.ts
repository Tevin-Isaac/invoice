import { useCallback } from "react"
import { useAccount } from "wagmi"
import { CreateOrangeKitConnectorFn } from "../wallet/connector"
import { OrangeKitClient } from "../wallet/client"

type OrangeKitConnector = ReturnType<CreateOrangeKitConnectorFn>

function useSendBitcoin() {
  const { connector } = useAccount()

  const sendBitcoin = useCallback(
    async (address: string, value: number): Promise<string | undefined> => {
      const orangeKitConnector = connector as unknown as OrangeKitConnector
      if (
        !orangeKitConnector ||
        typeof orangeKitConnector.getClient !== "function"
      )
        return undefined

      const client =
        (await orangeKitConnector.getClient()) as unknown as OrangeKitClient

      const txHash = await client.sendBitcoin(address, value)

      return txHash
    },
    [connector],
  )

  return { sendBitcoin }
}

export { useSendBitcoin }

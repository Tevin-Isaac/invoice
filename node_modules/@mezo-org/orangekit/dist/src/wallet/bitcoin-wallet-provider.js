import { BitcoinSignatureHelper } from "@mezo-org/orangekit-smart-account";
export class OrangeKitBitcoinProvider {
    #provider;
    constructor(_provider) {
        this.#provider = _provider;
    }
    setProvider(_provider) {
        this.#provider = _provider;
    }
    async disconnect() {
        if (typeof this.#provider.disconnect === "function") {
            await this.#provider.disconnect();
        }
        return Promise.resolve();
    }
    async connect() {
        const accounts = await this.#provider.requestAccounts();
        return accounts[0];
    }
    isInstalled() {
        return !!this.#provider;
    }
    async getAddress() {
        const accounts = await this.#provider.getAccounts();
        return accounts[0];
    }
    async getBalance() {
        const balance = await this.#provider.getBalance();
        return balance;
    }
    async signMessage(message) {
        const signature = await this.#provider.signMessage(message);
        const [address] = await this.#provider.getAccounts();
        return BitcoinSignatureHelper.normalizeSignature(Buffer.from(signature, "base64"), address, await this.getPublicKey());
    }
    async sendBitcoin(to, satoshis) {
        return this.#provider.sendBitcoin(to, satoshis);
    }
    async getPublicKey() {
        return this.#provider.getPublicKey();
    }
}
//# sourceMappingURL=bitcoin-wallet-provider.js.map
import { GelatoTransactionSenderConfig, OrangeKitSmartAccount } from "@mezo-org/orangekit-smart-account";
import { CreateConnectorFn } from "wagmi";
import { OrangeKitBitcoinWalletProvider } from "./bitcoin-wallet-provider";
import { OrangeKitWalletId, OrangeKitWalletName } from "./types";
type ConnectorProperties = {
    getBitcoinAddress(): Promise<string>;
    getBitcoinProvider(): OrangeKitBitcoinWalletProvider;
};
export type ConnectorConfig = {
    rpcUrl: string;
    chainId: number;
    relayApiKey?: string;
    relayConfig?: GelatoTransactionSenderConfig;
};
export type CreateOrangeKitConnectorFn = CreateConnectorFn<OrangeKitSmartAccount, ConnectorProperties>;
export type OrangeKitConnector = ReturnType<CreateOrangeKitConnectorFn>;
export type UnisatWagmiConnector = ReturnType<CreateOrangeKitConnectorFn>;
export declare function createOrangeKitConnector(id: OrangeKitWalletId, name: OrangeKitWalletName, icon: string, rpcUrl: ConnectorConfig["rpcUrl"], initialChainId: ConnectorConfig["chainId"], bitcoinWalletProvider: OrangeKitBitcoinWalletProvider, relayApiKey?: string, relayConfig?: GelatoTransactionSenderConfig): CreateOrangeKitConnectorFn;
export {};
//# sourceMappingURL=connector.d.ts.map
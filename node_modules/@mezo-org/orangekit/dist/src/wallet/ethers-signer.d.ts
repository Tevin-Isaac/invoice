import { OrangeKitSmartAccount } from "@mezo-org/orangekit-smart-account";
import { AbstractSigner, Provider, TransactionRequest, TransactionResponse } from "ethers";
import { Balance, OrangeKitBitcoinWalletProvider } from "./bitcoin-wallet-provider";
declare class OrangeKitEthersSigner extends AbstractSigner {
    #private;
    static init(provider: Provider | null, ethAddress: string, bitcoinWallet: OrangeKitBitcoinWalletProvider, orangekitSmartAccount: OrangeKitSmartAccount): OrangeKitEthersSigner;
    private constructor();
    signMessage(_message: string | Uint8Array): Promise<string>;
    sendBitcoin(address: string, amount: number): Promise<string>;
    getAddress(): Promise<string>;
    getBalance(): Promise<Balance>;
    getBitcoinAddress(): Promise<string>;
    connect(provider: Provider | null): OrangeKitEthersSigner;
    private waitForTransactionResponse;
    sendTransaction(transactionRequest: TransactionRequest, maxRetries?: number, delayMs?: number): Promise<TransactionResponse>;
    signTransaction(): Promise<string>;
    signTypedData(): Promise<string>;
    getNetwork(): Promise<import("ethers").Network> | undefined;
    readonly _isSigner: boolean;
    _checkProvider(): void;
    getChainId(): Promise<number>;
}
export { OrangeKitEthersSigner };
//# sourceMappingURL=ethers-signer.d.ts.map
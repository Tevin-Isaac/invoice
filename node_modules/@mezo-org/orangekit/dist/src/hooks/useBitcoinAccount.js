import { useEffect, useState } from "react";
import { useAccount } from "wagmi";
function useBitcoinAccount() {
    const { connector } = useAccount();
    const [btcAddress, setBtcAddress] = useState(undefined);
    const [btcBalance, setBtcBalance] = useState(undefined);
    useEffect(() => {
        const fetchBtcBalance = async () => {
            const orangeKitConnector = connector;
            if (!orangeKitConnector ||
                // Workaround to get rid of `getBitcoinProvider` is not a function error
                // when refreshing a page with previously connected connector.
                typeof orangeKitConnector.getBitcoinProvider !== "function") {
                setBtcAddress(undefined);
                setBtcBalance(undefined);
                return;
            }
            const provider = orangeKitConnector.getBitcoinProvider();
            const address = await provider.getAddress();
            const balance = await provider.getBalance();
            setBtcAddress(address);
            setBtcBalance(balance);
        };
        fetchBtcBalance();
    }, [connector, setBtcBalance]);
    return { btcAddress, btcBalance };
}
export { useBitcoinAccount };
//# sourceMappingURL=useBitcoinAccount.js.map
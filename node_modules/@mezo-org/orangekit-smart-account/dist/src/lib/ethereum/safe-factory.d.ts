import { OrangeKitSafeFactory as OrangeKitSafeFactoryTypechain } from "@mezo-org/orangekit-contracts/typechain/contracts/OrangeKitSafeFactory";
import { ContractTransaction } from "ethers";
import { OrangeKitSafeFactory } from "../contracts";
import { EthersContractConfig, EthersContractWrapper } from "./contract";
import { EthereumNetwork } from "./network";
import { Hex } from "../utils";
export declare class EthereumOrangeKitSafeFactory extends EthersContractWrapper<OrangeKitSafeFactoryTypechain> implements OrangeKitSafeFactory {
    constructor(config: EthersContractConfig, network: EthereumNetwork);
    predictAddress(truncatedBitcoinAddress: string): Promise<Hex>;
    populateSafeDeploymentTransaction(truncatedBitcoinAddress: string): Promise<ContractTransaction>;
}
//# sourceMappingURL=safe-factory.d.ts.map
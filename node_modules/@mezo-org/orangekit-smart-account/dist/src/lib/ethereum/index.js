import { ethers } from "ethers";
import { abi as BitcoinSafeOwnerAbi } from "@mezo-org/orangekit-contracts/artifacts/contracts/BitcoinSafeOwner.sol/BitcoinSafeOwner.json";
import { toNetwork } from "./network";
import { EthereumOrangeKitSafeFactory } from "./safe-factory";
// eslint-disable-next-line import/prefer-default-export
export function getEthereumContracts(provider, chainId) {
    const network = toNetwork(chainId);
    if (!network)
        throw new Error("Unsupported network");
    const deployer = new EthereumOrangeKitSafeFactory({ provider }, network);
    return { safeFactory: deployer };
}
export function getSafeOwner(owner) {
    return new ethers.Contract(owner, BitcoinSafeOwnerAbi);
}
//# sourceMappingURL=index.js.map
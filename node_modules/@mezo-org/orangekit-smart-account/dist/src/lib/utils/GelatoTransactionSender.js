import { GelatoRelay } from "@gelatonetwork/relay-sdk";
import relayTransaction from "./relayTransaction";
export default class GelatoTransactionSender {
    #relay;
    #relayApiKey;
    #config;
    constructor(relayApiKey, config = {
        backoffRetrier: { retries: 5, backoffStepMs: 1000 },
    }) {
        this.#relay = new GelatoRelay();
        this.#relayApiKey = relayApiKey;
        this.#config = config;
    }
    async sendTransaction(tx) {
        try {
            const result = await relayTransaction(this.#relay, this.#relayApiKey, {
                target: tx.to,
                data: tx.data ?? "",
                chainId: BigInt(tx.chainId),
            }, this.#config.backoffRetrier);
            // eslint-disable-next-line no-console
            console.log(`Transaction successful with hash: ${result.transactionHash}`);
            return { hash: result.transactionHash ?? "0x" };
        }
        catch (error) {
            // eslint-disable-next-line no-console
            console.log(`Error relaying transaction: ${error}`);
            throw error;
        }
    }
}
//# sourceMappingURL=GelatoTransactionSender.js.map
import { Chain, WalletList } from "@rainbow-me/rainbowkit";
import { Config, CreateConfigParameters } from "wagmi";
import { mezoMainnet, mezoTestnet } from "./constants";
type WagmiConfigParameters = Omit<CreateConfigParameters, "client" | "connectors" | "chains" | "wallets" | "transports">;
type GetDefaultConfigParameters = WagmiConfigParameters & {
    appName: string;
    mezoNetwork?: "mainnet" | "testnet";
    appDescription?: string;
    appUrl?: string;
    appIcon?: string;
    bitcoinWallets?: WalletList;
    walletConnectProjectId?: string;
    chains?: [Chain, ...Chain[]];
    transports?: Pick<CreateConfigParameters, "transports">;
};
export declare const defaultConfig: Required<Pick<GetDefaultConfigParameters, "transports" | "walletConnectProjectId" | "chains" | "multiInjectedProviderDiscovery">>;
export declare const unisatWalletMezoTestnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const okxWalletMezoTestnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const xverseWalletMezoTestnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const unisatWalletMezoMainnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const okxWalletMezoMainnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const xverseWalletMezoMainnet: import("@mezo-org/orangekit").CreateWalletFn;
export declare const preconfiguredWalletConnectWallet: (projectId: string) => import("@rainbow-me/rainbowkit").Wallet;
export declare function getDefaultWallets(network?: "mainnet" | "testnet"): WalletList;
export declare function getConfig(config: GetDefaultConfigParameters): Config;
/**
 * This config is only used to listen for Transfer events on mezo chain.
 * Should not be exported in index for public use.
 */
export declare const simpleWssMezoConfig: Config<readonly [import("viem").Chain, import("viem").Chain], {
    [mezoMainnet.id]: import("viem").WebSocketTransport;
    [mezoTestnet.id]: import("viem").WebSocketTransport;
}>;
export {};
//# sourceMappingURL=config.d.ts.map
import { http } from "viem";
import { getDefaultConfig } from "@rainbow-me/rainbowkit";
import { CHAIN_ID, matsnetTestnetChain, RPC_BY_NETWORK } from "./constants";
import { getOKXWallet, getUnisatWallet, getXverseWallet } from "./wallet";
const transports = {
    [CHAIN_ID.testnet]: http(RPC_BY_NETWORK.testnet),
};
export const defaultConfig = {
    transports,
    walletConnectProjectId: "",
    chains: [matsnetTestnetChain],
    multiInjectedProviderDiscovery: true,
};
export function getDefaultWallets() {
    const bitcoinWalletConfig = {
        rpcUrl: RPC_BY_NETWORK.testnet,
        chainId: CHAIN_ID.testnet,
        // TODO: This will be removed once we merge passport relay worked is merged
        relayApiKey: "",
    };
    const unisatWallet = getUnisatWallet(bitcoinWalletConfig);
    const okxWallet = getOKXWallet(bitcoinWalletConfig);
    const xverseWallet = getXverseWallet(bitcoinWalletConfig);
    return [
        {
            groupName: "Bitcoin",
            wallets: [unisatWallet, okxWallet, xverseWallet],
        },
    ];
}
export function getConfig({ appName, bitcoinWallets, walletConnectProjectId, ...restParameters }) {
    return getDefaultConfig({
        ...defaultConfig,
        appName,
        wallets: [...getDefaultWallets(), ...(bitcoinWallets ?? [])],
        projectId: walletConnectProjectId ?? defaultConfig.walletConnectProjectId,
        ...restParameters,
    });
}
//# sourceMappingURL=config.js.map